.QWidget {
   background-color: rgb(214,213,216);     
}

QWidget#setTimeWidget {
	background-color: rgb(240,240,240); 
}

QWidget#chartLegend {
	background-color: rgb(255,0,0); 
}


QWidget [style2="true"] {
	background-color: rgb(240,240,240);
}

/* We reserve 1 pixel space in padding. When we get the focus,
   we kill the padding and enlarge the border. This makes the items
   glow. */
   
QFrame {

}

QTreeWidget[style="true"] {
	border-width: 1px;
    border-style: solid;
    border-color: rgb(149,149,149);
    font: regular;
    font-size: 14px;  
    font-family: Malgun Gothic; 
    color: rgb(0,0,0);  
}

agCanvasWidget[style="true"] {	
    border-width: 5px;
    border-style: solid;
    border-color: rgb(255,255,255);
    font-family: Malgun Gothic;    
}

QwtPlot[style="true"] { 
	border-width: 0px;
    border-style: solid;
    border-color: rgb(149,149,149);
    background-color: rgb(240,240,240);
    font-family: Malgun Gothic; 
}

QwtTextLabel[style="true"] {
	background-color: rgb(90,90,90);
}

QwtAbstractLegend {
	border: 0px solid rgb(240,240,240);
}

QScrollBar:vertical {
	border: 1px solid #999999;
	background:white;
	margin: 0px 0px 0px 0px;
}

QScrollBar::handle:vertical {
    background: rgb(137, 137, 137);
    min-height: 0px;    
}
QScrollBar::handle:vertical {
    background: rgb(137, 137, 137);
    min-height: 0px;    
}
QScrollBar::add-line:vertical {
    background: red;
    height: px;
    subcontrol-position: bottom;
    subcontrol-origin: margin;
}
QScrollBar::sub-line:vertical {
    background: red;
    height: 0px;
    subcontrol-position: top;
    subcontrol-origin: margin;
}

QScrollBar:horizontal {
	border: 1px solid #999999;
	background:white;
	margin: 0px 0px 0px 0px;
}

QScrollBar::handle:horizontal {
    background: rgb(137, 137, 137);
    min-height: 0px;    
}
QScrollBar::handle:horizontal {
    background: rgb(137, 137, 137);
    min-height: 0px;    
}
QScrollBar::add-line:horizontal {
    background: red;
    height: px;
    subcontrol-position: bottom;
    subcontrol-origin: margin;
}
QScrollBar::sub-line:horizontal {
    background: red;
    height: 0px;
    subcontrol-position: top;
    subcontrol-origin: margin;
}

QTabWidget {
	font: regular;
    font-size: 14px;  
    font-family: Malgun Gothic;     
}

QTabWidget::pane { /* The tab widget frame */
	border-top: 1px solid rgb(255,255,255);
	border-width: 1px;
	border-style: solid;
    border-color: rgb(149,149,149);
    background: rgb(227,227,227);
    border
}

QTabWidget::tab-bar {
   /* left: 5px;  move to the right by 5px */
}

/* Style the tab using the tab sub-control. Note that
    it reads QTabBar _not_ QTabWidget */
QTabBar::tab {
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
    border: 2px solid #C4C4C3;
    border-bottom-color: rgb(227,227,227); /* same as the pane color */
    border-top-left-radius: 4px;
    border-top-right-radius: 4px;
    min-width: 8ex;
    padding: 2px;
}

QTabBar::tab:selected, QTabBar::tab:hover {
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                stop: 0 #fafafa, stop: 0.4 #f4f4f4,
                                stop: 0.5 #e7e7e7, stop: 1.0 #fafafa);
}

QTabBar::tab:selected {
    border-color: #9B9B9B;
    border-bottom-color: rgb(227,227,227); /* same as pane color */
}

QTabBar::tab:!selected {
    margin-top: 2px; /* make non-selected tabs look smaller */
}

QSplitter::handle:horizontal {
     background-color: rgb(214,213,216);     
}

QSplitter::handle:vertical {
    background-color: rgb(214,213,216);     
}

/* Nice Windows-XP-style password character. 
QLineEdit[echoMode="2"] {
    lineedit-password-character: 9679;
}												*/

/* We provide a min-width and min-height for push buttons
   so that they look elegant regardless of the width of the text. */
QPushButton#btnNewTab {
    background-color: rgb(251,251,251);
    border-width: 3px;
    border-color: rgb(149,149,149);
    border-style: solid;  
    font: regular;
    font-size: 15px;  
    font-family: Malgun Gothic; 
    color: rgb(0,0,0);  
}

QPushButton#btnNewTab:hover {
    background-color: rgb(163,215,255);
}

QPushButton#btnDelListItem {
	background-color: rgb(251,251,251);
    border-width: 3px;
    border-color: rgb(149,149,149);
    border-style: solid;  
    font: regular;
    font-size: 15px;  
    font-family: Malgun Gothic; 
    color: rgb(0,0,0);  
}

QPushButton#btnDelListItem:hover {
    background-color: rgb(163,215,255);
}

QPushButton {
	background-color: rgb(251,251,251);
    border-width: 1px;
    border-color: rgb(149,149,149);
    border-style: solid;  
    font: regular;
    font-size: 14px;  
    font-family: Malgun Gothic; 
    color: rgb(0,0,0);  
    padding: 3px;
}

QPushButton:hover {
   background-color: rgb(163,215,255);
}

/* Increase the padding, so the text is shifted when the button is
   pressed. */
QPushButton:pressed {
    padding-left: 5px;
    padding-top: 5px;
    background-color: rgb(163,215,255);
}

QAbstractButton {
    font: regular;
    font-size: 14px;  
    font-family: Malgun Gothic; 
    color: rgb(0,0,0);  
}								

/* A QLabel is a QFrame ... */
QLabel {
    font-size: 20px;  
    font-family: Malgun Gothic; 
    padding-top: 5px;
    color: rgb(0,0,0);  
}

/* Mark mandatory fields with a brownish color. */
.mandatory {
    font: bold;
	font-size: 25px;  
    font-family: Malgun Gothic; 
    color: rgb(0,0,0); 
}

.setTime {
	font-size: 17px;  
    font-family: Malgun Gothic; 
    color: rbg(0,0,0);  
}

QLabel[style="true"] {
	font-size: 15px;  
    font-family: Malgun Gothic; 
    color: rbg(0,0,0);  
}

/* Bold text on status bar looks awful. */
QStatusBar QLabel {
   font: normal;
}

QStatusBar::item {
    border-width: 1;
    border-color: darkkhaki;
    border-style: solid;
    border-radius: 2;
}

QLineEdit, QSpinBox, QTextEdit, QListView {
    background-color: white;
    selection-color: rgb(163,215,255); 
    /*selection-background-color: rgb(163,215,255);*/
    font: regular;
    font-size: 14px;  
    font-family: Malgun Gothic; 
    color: rgb(0,0,0);  
}

QComboBox {	
	border-width: 1;
	border-color: rgb(149,149,149);
	width: 17px;
	height: 23px;
	font: regular;
    font-size: 12px;  
    font-family: Malgun Gothic; 
}

QListView {
    show-decoration-selected: 1;
}

QListView::item:hover {
    background-color: rgb(163,215,255);
}

/* As mentioned above, eliminate the padding and increase the border. 
QLineEdit:focus, QFrame:focus {
    border-width: 3px;
    padding: 0px;
}																	*/					

/* A QToolTip is a QLabel ... */
QToolTip {
    border: 1px solid rbg(149,149,149);
    padding: 5px;
    border-radius: 1px;
    opacity: 200;
}

/* Nice to have the background color change when hovered. */
QRadioButton:hover, QCheckBox:hover {
    background-color: rgb(163,215,255);
}

/* Force the dialog's buttons to follow the Windows guidelines. */
QDialogButtonBox {
    button-layout: 0;
}


